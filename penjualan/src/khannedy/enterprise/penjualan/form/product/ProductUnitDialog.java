/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProductUnitDialog.java
 *
 * Created on Mar 13, 2010, 10:22:42 PM
 */
package khannedy.enterprise.penjualan.form.product;

import java.awt.Component;
import java.util.List;
import javax.persistence.EntityManager;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JLabel;
import javax.swing.JList;
import khannedy.enterprise.penjualan.entity.Category;
import khannedy.enterprise.penjualan.entity.Product;
import khannedy.enterprise.penjualan.util.PersistenceContext;

/**
 *
 * @author echo
 */
public class ProductUnitDialog extends javax.swing.JDialog {

    private Product product;

    /** Creates new form ProductUnitDialog */
    public ProductUnitDialog(ProductDialog parent) {
	super(parent, true);
	initComponents();

	comboKategori.setRenderer(new CategoryComboBoxRender());
    }

    public Product createProduct() {
	reloadCategory();
	product = null;

	buttonTambah.setText("Tambah");
	reset("Tambah Produk");

	setVisible(true);
	return product;
    }

    public Product changeProduct(Product product) {
	reloadCategory();
	this.product = product;

	buttonTambah.setText("Ubah");
	reset("Ubah Produk", product.getName(), product.getCategory(), product.getPrice(), product.getDescription());

	setVisible(true);
	return this.product;
    }

    public void reset(String title) {
	reset(title, null, null, 0.0d, null);
    }

    public void reset(String title, String name, Category category, Double price, String description) {
	setTitle(title);
	textNama.setText(name);
	textDeskripsi.setText(description);
	textHarga.setValue(price);
	if (category != null) {
	    comboKategori.setSelectedItem(category);
	}
    }

    public void reloadCategory() {
	EntityManager manager = PersistenceContext.createEntityManager();
	try {
	    manager.getTransaction().begin();
	    List<Category> list = manager.createQuery("select a from Category a order by a.id").getResultList();
	    comboKategori.removeAllItems();
	    for (Category category : list) {
		comboKategori.addItem(category);
	    }
	    manager.getTransaction().commit();
	} catch (Throwable t) {
	    t.printStackTrace();
	    manager.getTransaction().rollback();
	} finally {
	    manager.close();
	}
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textNama = new javax.swing.JTextField();
        comboKategori = new javax.swing.JComboBox();
        textHarga = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textDeskripsi = new javax.swing.JTextArea();
        buttonBatal = new javax.swing.JButton();
        buttonTambah = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Nama :");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Kategori :");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Harga :");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Deskripsi :");

        textHarga.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        textDeskripsi.setColumns(20);
        textDeskripsi.setRows(5);
        jScrollPane1.setViewportView(textDeskripsi);

        buttonBatal.setText("Batal");
        buttonBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBatalActionPerformed(evt);
            }
        });

        buttonTambah.setText("Tambah");
        buttonTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTambahActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(textNama, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                    .addComponent(comboKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(192, Short.MAX_VALUE)
                .addComponent(buttonTambah)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonBatal)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBatal)
                    .addComponent(buttonTambah))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-367)/2, (screenSize.height-320)/2, 367, 320);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBatalActionPerformed
	product = null;
	setVisible(false);
    }//GEN-LAST:event_buttonBatalActionPerformed

    private void buttonTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTambahActionPerformed
	if (buttonTambah.getText().equalsIgnoreCase("tambah")) {
	    EntityManager manager = PersistenceContext.createEntityManager();
	    try {
		manager.getTransaction().begin();
		Product p = new Product();
		p.setCategory((Category) comboKategori.getSelectedItem());
		p.setDescription(textDeskripsi.getText());
		p.setName(textNama.getText());
		p.setPrice(Double.parseDouble(textHarga.getValue().toString()));
		manager.persist(p);
		product = p;
		manager.getTransaction().commit();
	    } catch (Throwable t) {
		t.printStackTrace();
		manager.getTransaction().rollback();
	    } finally {
		manager.close();
	    }
	} else {
	    EntityManager manager = PersistenceContext.createEntityManager();
	    try {
		manager.getTransaction().begin();
		product.setCategory((Category) comboKategori.getSelectedItem());
		product.setDescription(textDeskripsi.getText());
		product.setName(textNama.getText());
		product.setPrice(Double.parseDouble(textHarga.getValue().toString()));
		System.out.println(textHarga.getValue());
		product = manager.merge(product);
		manager.getTransaction().commit();
	    } catch (Throwable t) {
		t.printStackTrace();
		manager.getTransaction().rollback();
	    } finally {
		manager.close();
	    }
	}
	setVisible(false);
    }//GEN-LAST:event_buttonTambahActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBatal;
    private javax.swing.JButton buttonTambah;
    private javax.swing.JComboBox comboKategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textDeskripsi;
    private javax.swing.JFormattedTextField textHarga;
    private javax.swing.JTextField textNama;
    // End of variables declaration//GEN-END:variables

    // inner class
    class CategoryComboBoxRender extends DefaultListCellRenderer {

	@Override
	public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
	    JLabel label = (JLabel) super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
	    if (value != null && value instanceof Category) {
		Category category = (Category) value;
		label.setText(category.getName());
	    }
	    return label;
	}
    }
}
